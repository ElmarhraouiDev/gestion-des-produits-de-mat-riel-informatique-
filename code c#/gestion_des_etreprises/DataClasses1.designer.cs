#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace gestion_des_etreprises
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="gestion_des_produits")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAchate(Achate instance);
    partial void UpdateAchate(Achate instance);
    partial void DeleteAchate(Achate instance);
    partial void InsertFournisseur(Fournisseur instance);
    partial void UpdateFournisseur(Fournisseur instance);
    partial void DeleteFournisseur(Fournisseur instance);
    partial void InsertVendeur(Vendeur instance);
    partial void UpdateVendeur(Vendeur instance);
    partial void DeleteVendeur(Vendeur instance);
    partial void InsertProduit(Produit instance);
    partial void UpdateProduit(Produit instance);
    partial void DeleteProduit(Produit instance);
    partial void InsertReparation(Reparation instance);
    partial void UpdateReparation(Reparation instance);
    partial void DeleteReparation(Reparation instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::gestion_des_etreprises.Properties.Settings.Default.gestion_des_produitsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Achate> Achate
		{
			get
			{
				return this.GetTable<Achate>();
			}
		}
		
		public System.Data.Linq.Table<Fournisseur> Fournisseur
		{
			get
			{
				return this.GetTable<Fournisseur>();
			}
		}
		
		public System.Data.Linq.Table<Vendeur> Vendeur
		{
			get
			{
				return this.GetTable<Vendeur>();
			}
		}
		
		public System.Data.Linq.Table<Produit> Produit
		{
			get
			{
				return this.GetTable<Produit>();
			}
		}
		
		public System.Data.Linq.Table<Reparation> Reparation
		{
			get
			{
				return this.GetTable<Reparation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Achate")]
	public partial class Achate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumAchate;
		
		private int _NumProduit;
		
		private int _NumVendeur;
		
		private System.Nullable<int> _quantitéProduit;
		
		private System.Nullable<System.DateTime> _dateAchate;
		
		private string _commenter;
		
		private System.Nullable<int> _prixAchate;
		
		private System.Nullable<int> _payment;
		
		private EntityRef<Vendeur> _Vendeur;
		
		private EntityRef<Vendeur> _Vendeur1;
		
		private EntityRef<Produit> _Produit;
		
		private EntityRef<Produit> _Produit1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumAchateChanging(int value);
    partial void OnNumAchateChanged();
    partial void OnNumProduitChanging(int value);
    partial void OnNumProduitChanged();
    partial void OnNumVendeurChanging(int value);
    partial void OnNumVendeurChanged();
    partial void OnquantitéProduitChanging(System.Nullable<int> value);
    partial void OnquantitéProduitChanged();
    partial void OndateAchateChanging(System.Nullable<System.DateTime> value);
    partial void OndateAchateChanged();
    partial void OncommenterChanging(string value);
    partial void OncommenterChanged();
    partial void OnprixAchateChanging(System.Nullable<int> value);
    partial void OnprixAchateChanged();
    partial void OnpaymentChanging(System.Nullable<int> value);
    partial void OnpaymentChanged();
    #endregion
		
		public Achate()
		{
			this._Vendeur = default(EntityRef<Vendeur>);
			this._Vendeur1 = default(EntityRef<Vendeur>);
			this._Produit = default(EntityRef<Produit>);
			this._Produit1 = default(EntityRef<Produit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAchate", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumAchate
		{
			get
			{
				return this._NumAchate;
			}
			set
			{
				if ((this._NumAchate != value))
				{
					this.OnNumAchateChanging(value);
					this.SendPropertyChanging();
					this._NumAchate = value;
					this.SendPropertyChanged("NumAchate");
					this.OnNumAchateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumProduit", DbType="Int NOT NULL")]
		public int NumProduit
		{
			get
			{
				return this._NumProduit;
			}
			set
			{
				if ((this._NumProduit != value))
				{
					if ((this._Produit.HasLoadedOrAssignedValue || this._Produit1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumProduitChanging(value);
					this.SendPropertyChanging();
					this._NumProduit = value;
					this.SendPropertyChanged("NumProduit");
					this.OnNumProduitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumVendeur", DbType="Int NOT NULL")]
		public int NumVendeur
		{
			get
			{
				return this._NumVendeur;
			}
			set
			{
				if ((this._NumVendeur != value))
				{
					if ((this._Vendeur.HasLoadedOrAssignedValue || this._Vendeur1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumVendeurChanging(value);
					this.SendPropertyChanging();
					this._NumVendeur = value;
					this.SendPropertyChanged("NumVendeur");
					this.OnNumVendeurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantitéProduit", DbType="Int")]
		public System.Nullable<int> quantitéProduit
		{
			get
			{
				return this._quantitéProduit;
			}
			set
			{
				if ((this._quantitéProduit != value))
				{
					this.OnquantitéProduitChanging(value);
					this.SendPropertyChanging();
					this._quantitéProduit = value;
					this.SendPropertyChanged("quantitéProduit");
					this.OnquantitéProduitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAchate", DbType="Date")]
		public System.Nullable<System.DateTime> dateAchate
		{
			get
			{
				return this._dateAchate;
			}
			set
			{
				if ((this._dateAchate != value))
				{
					this.OndateAchateChanging(value);
					this.SendPropertyChanging();
					this._dateAchate = value;
					this.SendPropertyChanged("dateAchate");
					this.OndateAchateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commenter", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string commenter
		{
			get
			{
				return this._commenter;
			}
			set
			{
				if ((this._commenter != value))
				{
					this.OncommenterChanging(value);
					this.SendPropertyChanging();
					this._commenter = value;
					this.SendPropertyChanged("commenter");
					this.OncommenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prixAchate", DbType="Int")]
		public System.Nullable<int> prixAchate
		{
			get
			{
				return this._prixAchate;
			}
			set
			{
				if ((this._prixAchate != value))
				{
					this.OnprixAchateChanging(value);
					this.SendPropertyChanging();
					this._prixAchate = value;
					this.SendPropertyChanged("prixAchate");
					this.OnprixAchateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment", DbType="Int")]
		public System.Nullable<int> payment
		{
			get
			{
				return this._payment;
			}
			set
			{
				if ((this._payment != value))
				{
					this.OnpaymentChanging(value);
					this.SendPropertyChanging();
					this._payment = value;
					this.SendPropertyChanged("payment");
					this.OnpaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendeur_Achate", Storage="_Vendeur", ThisKey="NumVendeur", OtherKey="NumVendeur", IsForeignKey=true)]
		public Vendeur Vendeur
		{
			get
			{
				return this._Vendeur.Entity;
			}
			set
			{
				Vendeur previousValue = this._Vendeur.Entity;
				if (((previousValue != value) 
							|| (this._Vendeur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendeur.Entity = null;
						previousValue.Achate.Remove(this);
					}
					this._Vendeur.Entity = value;
					if ((value != null))
					{
						value.Achate.Add(this);
						this._NumVendeur = value.NumVendeur;
					}
					else
					{
						this._NumVendeur = default(int);
					}
					this.SendPropertyChanged("Vendeur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendeur_Achate1", Storage="_Vendeur1", ThisKey="NumVendeur", OtherKey="NumVendeur", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Vendeur Vendeur1
		{
			get
			{
				return this._Vendeur1.Entity;
			}
			set
			{
				Vendeur previousValue = this._Vendeur1.Entity;
				if (((previousValue != value) 
							|| (this._Vendeur1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendeur1.Entity = null;
						previousValue.Achate1.Remove(this);
					}
					this._Vendeur1.Entity = value;
					if ((value != null))
					{
						value.Achate1.Add(this);
						this._NumVendeur = value.NumVendeur;
					}
					else
					{
						this._NumVendeur = default(int);
					}
					this.SendPropertyChanged("Vendeur1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produit_Achate", Storage="_Produit", ThisKey="NumProduit", OtherKey="NumProduit", IsForeignKey=true)]
		public Produit Produit
		{
			get
			{
				return this._Produit.Entity;
			}
			set
			{
				Produit previousValue = this._Produit.Entity;
				if (((previousValue != value) 
							|| (this._Produit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produit.Entity = null;
						previousValue.Achate.Remove(this);
					}
					this._Produit.Entity = value;
					if ((value != null))
					{
						value.Achate.Add(this);
						this._NumProduit = value.NumProduit;
					}
					else
					{
						this._NumProduit = default(int);
					}
					this.SendPropertyChanged("Produit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produit_Achate1", Storage="_Produit1", ThisKey="NumProduit", OtherKey="NumProduit", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Produit Produit1
		{
			get
			{
				return this._Produit1.Entity;
			}
			set
			{
				Produit previousValue = this._Produit1.Entity;
				if (((previousValue != value) 
							|| (this._Produit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produit1.Entity = null;
						previousValue.Achate1.Remove(this);
					}
					this._Produit1.Entity = value;
					if ((value != null))
					{
						value.Achate1.Add(this);
						this._NumProduit = value.NumProduit;
					}
					else
					{
						this._NumProduit = default(int);
					}
					this.SendPropertyChanged("Produit1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fournisseur")]
	public partial class Fournisseur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumFournisseur;
		
		private string _nameFournisseur;
		
		private string _TelFournisseur;
		
		private string _AddressFournisseur;
		
		private EntitySet<Produit> _Produit;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumFournisseurChanging(int value);
    partial void OnNumFournisseurChanged();
    partial void OnnameFournisseurChanging(string value);
    partial void OnnameFournisseurChanged();
    partial void OnTelFournisseurChanging(string value);
    partial void OnTelFournisseurChanged();
    partial void OnAddressFournisseurChanging(string value);
    partial void OnAddressFournisseurChanged();
    #endregion
		
		public Fournisseur()
		{
			this._Produit = new EntitySet<Produit>(new Action<Produit>(this.attach_Produit), new Action<Produit>(this.detach_Produit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFournisseur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumFournisseur
		{
			get
			{
				return this._NumFournisseur;
			}
			set
			{
				if ((this._NumFournisseur != value))
				{
					this.OnNumFournisseurChanging(value);
					this.SendPropertyChanging();
					this._NumFournisseur = value;
					this.SendPropertyChanged("NumFournisseur");
					this.OnNumFournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameFournisseur", DbType="VarChar(100)")]
		public string nameFournisseur
		{
			get
			{
				return this._nameFournisseur;
			}
			set
			{
				if ((this._nameFournisseur != value))
				{
					this.OnnameFournisseurChanging(value);
					this.SendPropertyChanging();
					this._nameFournisseur = value;
					this.SendPropertyChanged("nameFournisseur");
					this.OnnameFournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelFournisseur", DbType="VarChar(50)")]
		public string TelFournisseur
		{
			get
			{
				return this._TelFournisseur;
			}
			set
			{
				if ((this._TelFournisseur != value))
				{
					this.OnTelFournisseurChanging(value);
					this.SendPropertyChanging();
					this._TelFournisseur = value;
					this.SendPropertyChanged("TelFournisseur");
					this.OnTelFournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressFournisseur", DbType="VarChar(100)")]
		public string AddressFournisseur
		{
			get
			{
				return this._AddressFournisseur;
			}
			set
			{
				if ((this._AddressFournisseur != value))
				{
					this.OnAddressFournisseurChanging(value);
					this.SendPropertyChanging();
					this._AddressFournisseur = value;
					this.SendPropertyChanged("AddressFournisseur");
					this.OnAddressFournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fournisseur_Produit", Storage="_Produit", ThisKey="NumFournisseur", OtherKey="NumFournisseur")]
		public EntitySet<Produit> Produit
		{
			get
			{
				return this._Produit;
			}
			set
			{
				this._Produit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produit(Produit entity)
		{
			this.SendPropertyChanging();
			entity.Fournisseur = this;
		}
		
		private void detach_Produit(Produit entity)
		{
			this.SendPropertyChanging();
			entity.Fournisseur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendeur")]
	public partial class Vendeur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumVendeur;
		
		private string _nameVendeur;
		
		private EntitySet<Achate> _Achate;
		
		private EntitySet<Achate> _Achate1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumVendeurChanging(int value);
    partial void OnNumVendeurChanged();
    partial void OnnameVendeurChanging(string value);
    partial void OnnameVendeurChanged();
    #endregion
		
		public Vendeur()
		{
			this._Achate = new EntitySet<Achate>(new Action<Achate>(this.attach_Achate), new Action<Achate>(this.detach_Achate));
			this._Achate1 = new EntitySet<Achate>(new Action<Achate>(this.attach_Achate1), new Action<Achate>(this.detach_Achate1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumVendeur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumVendeur
		{
			get
			{
				return this._NumVendeur;
			}
			set
			{
				if ((this._NumVendeur != value))
				{
					this.OnNumVendeurChanging(value);
					this.SendPropertyChanging();
					this._NumVendeur = value;
					this.SendPropertyChanged("NumVendeur");
					this.OnNumVendeurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameVendeur", DbType="VarChar(100)")]
		public string nameVendeur
		{
			get
			{
				return this._nameVendeur;
			}
			set
			{
				if ((this._nameVendeur != value))
				{
					this.OnnameVendeurChanging(value);
					this.SendPropertyChanging();
					this._nameVendeur = value;
					this.SendPropertyChanged("nameVendeur");
					this.OnnameVendeurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendeur_Achate", Storage="_Achate", ThisKey="NumVendeur", OtherKey="NumVendeur")]
		public EntitySet<Achate> Achate
		{
			get
			{
				return this._Achate;
			}
			set
			{
				this._Achate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendeur_Achate1", Storage="_Achate1", ThisKey="NumVendeur", OtherKey="NumVendeur")]
		public EntitySet<Achate> Achate1
		{
			get
			{
				return this._Achate1;
			}
			set
			{
				this._Achate1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Achate(Achate entity)
		{
			this.SendPropertyChanging();
			entity.Vendeur = this;
		}
		
		private void detach_Achate(Achate entity)
		{
			this.SendPropertyChanging();
			entity.Vendeur = null;
		}
		
		private void attach_Achate1(Achate entity)
		{
			this.SendPropertyChanging();
			entity.Vendeur1 = this;
		}
		
		private void detach_Achate1(Achate entity)
		{
			this.SendPropertyChanging();
			entity.Vendeur1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produit")]
	public partial class Produit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumProduit;
		
		private int _NumFournisseur;
		
		private string _nameProduit;
		
		private System.Nullable<int> _quantité;
		
		private string _TypeProduit;
		
		private System.Nullable<double> _prix_Fournisseur;
		
		private System.Nullable<double> _prix_achat;
		
		private System.Nullable<System.DateTime> _DateCommande;
		
		private System.Nullable<int> _payment;
		
		private EntitySet<Achate> _Achate;
		
		private EntitySet<Achate> _Achate1;
		
		private EntityRef<Fournisseur> _Fournisseur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumProduitChanging(int value);
    partial void OnNumProduitChanged();
    partial void OnNumFournisseurChanging(int value);
    partial void OnNumFournisseurChanged();
    partial void OnnameProduitChanging(string value);
    partial void OnnameProduitChanged();
    partial void OnquantitéChanging(System.Nullable<int> value);
    partial void OnquantitéChanged();
    partial void OnTypeProduitChanging(string value);
    partial void OnTypeProduitChanged();
    partial void Onprix_FournisseurChanging(System.Nullable<double> value);
    partial void Onprix_FournisseurChanged();
    partial void Onprix_achatChanging(System.Nullable<double> value);
    partial void Onprix_achatChanged();
    partial void OnDateCommandeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCommandeChanged();
    partial void OnpaymentChanging(System.Nullable<int> value);
    partial void OnpaymentChanged();
    #endregion
		
		public Produit()
		{
			this._Achate = new EntitySet<Achate>(new Action<Achate>(this.attach_Achate), new Action<Achate>(this.detach_Achate));
			this._Achate1 = new EntitySet<Achate>(new Action<Achate>(this.attach_Achate1), new Action<Achate>(this.detach_Achate1));
			this._Fournisseur = default(EntityRef<Fournisseur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumProduit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumProduit
		{
			get
			{
				return this._NumProduit;
			}
			set
			{
				if ((this._NumProduit != value))
				{
					this.OnNumProduitChanging(value);
					this.SendPropertyChanging();
					this._NumProduit = value;
					this.SendPropertyChanged("NumProduit");
					this.OnNumProduitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFournisseur", DbType="Int NOT NULL")]
		public int NumFournisseur
		{
			get
			{
				return this._NumFournisseur;
			}
			set
			{
				if ((this._NumFournisseur != value))
				{
					if (this._Fournisseur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumFournisseurChanging(value);
					this.SendPropertyChanging();
					this._NumFournisseur = value;
					this.SendPropertyChanged("NumFournisseur");
					this.OnNumFournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameProduit", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nameProduit
		{
			get
			{
				return this._nameProduit;
			}
			set
			{
				if ((this._nameProduit != value))
				{
					this.OnnameProduitChanging(value);
					this.SendPropertyChanging();
					this._nameProduit = value;
					this.SendPropertyChanged("nameProduit");
					this.OnnameProduitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantité", DbType="Int")]
		public System.Nullable<int> quantité
		{
			get
			{
				return this._quantité;
			}
			set
			{
				if ((this._quantité != value))
				{
					this.OnquantitéChanging(value);
					this.SendPropertyChanging();
					this._quantité = value;
					this.SendPropertyChanged("quantité");
					this.OnquantitéChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeProduit", DbType="VarChar(30)")]
		public string TypeProduit
		{
			get
			{
				return this._TypeProduit;
			}
			set
			{
				if ((this._TypeProduit != value))
				{
					this.OnTypeProduitChanging(value);
					this.SendPropertyChanging();
					this._TypeProduit = value;
					this.SendPropertyChanged("TypeProduit");
					this.OnTypeProduitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix_Fournisseur", DbType="Float")]
		public System.Nullable<double> prix_Fournisseur
		{
			get
			{
				return this._prix_Fournisseur;
			}
			set
			{
				if ((this._prix_Fournisseur != value))
				{
					this.Onprix_FournisseurChanging(value);
					this.SendPropertyChanging();
					this._prix_Fournisseur = value;
					this.SendPropertyChanged("prix_Fournisseur");
					this.Onprix_FournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix_achat", DbType="Float")]
		public System.Nullable<double> prix_achat
		{
			get
			{
				return this._prix_achat;
			}
			set
			{
				if ((this._prix_achat != value))
				{
					this.Onprix_achatChanging(value);
					this.SendPropertyChanging();
					this._prix_achat = value;
					this.SendPropertyChanged("prix_achat");
					this.Onprix_achatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCommande", DbType="Date")]
		public System.Nullable<System.DateTime> DateCommande
		{
			get
			{
				return this._DateCommande;
			}
			set
			{
				if ((this._DateCommande != value))
				{
					this.OnDateCommandeChanging(value);
					this.SendPropertyChanging();
					this._DateCommande = value;
					this.SendPropertyChanged("DateCommande");
					this.OnDateCommandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment", DbType="Int")]
		public System.Nullable<int> payment
		{
			get
			{
				return this._payment;
			}
			set
			{
				if ((this._payment != value))
				{
					this.OnpaymentChanging(value);
					this.SendPropertyChanging();
					this._payment = value;
					this.SendPropertyChanged("payment");
					this.OnpaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produit_Achate", Storage="_Achate", ThisKey="NumProduit", OtherKey="NumProduit")]
		public EntitySet<Achate> Achate
		{
			get
			{
				return this._Achate;
			}
			set
			{
				this._Achate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produit_Achate1", Storage="_Achate1", ThisKey="NumProduit", OtherKey="NumProduit")]
		public EntitySet<Achate> Achate1
		{
			get
			{
				return this._Achate1;
			}
			set
			{
				this._Achate1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fournisseur_Produit", Storage="_Fournisseur", ThisKey="NumFournisseur", OtherKey="NumFournisseur", IsForeignKey=true)]
		public Fournisseur Fournisseur
		{
			get
			{
				return this._Fournisseur.Entity;
			}
			set
			{
				Fournisseur previousValue = this._Fournisseur.Entity;
				if (((previousValue != value) 
							|| (this._Fournisseur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fournisseur.Entity = null;
						previousValue.Produit.Remove(this);
					}
					this._Fournisseur.Entity = value;
					if ((value != null))
					{
						value.Produit.Add(this);
						this._NumFournisseur = value.NumFournisseur;
					}
					else
					{
						this._NumFournisseur = default(int);
					}
					this.SendPropertyChanged("Fournisseur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Achate(Achate entity)
		{
			this.SendPropertyChanging();
			entity.Produit = this;
		}
		
		private void detach_Achate(Achate entity)
		{
			this.SendPropertyChanging();
			entity.Produit = null;
		}
		
		private void attach_Achate1(Achate entity)
		{
			this.SendPropertyChanging();
			entity.Produit1 = this;
		}
		
		private void detach_Achate1(Achate entity)
		{
			this.SendPropertyChanging();
			entity.Produit1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reparation")]
	public partial class Reparation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Num_Reparation;
		
		private string _Titre_Reparation;
		
		private System.Nullable<int> _Prix;
		
		private System.Nullable<System.DateTime> _Date_Reparation;
		
		private string _Telephone_Client;
		
		private string _Commenter;
		
		private System.Nullable<int> _payment;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNum_ReparationChanging(int value);
    partial void OnNum_ReparationChanged();
    partial void OnTitre_ReparationChanging(string value);
    partial void OnTitre_ReparationChanged();
    partial void OnPrixChanging(System.Nullable<int> value);
    partial void OnPrixChanged();
    partial void OnDate_ReparationChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_ReparationChanged();
    partial void OnTelephone_ClientChanging(string value);
    partial void OnTelephone_ClientChanged();
    partial void OnCommenterChanging(string value);
    partial void OnCommenterChanged();
    partial void OnpaymentChanging(System.Nullable<int> value);
    partial void OnpaymentChanged();
    #endregion
		
		public Reparation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_Reparation", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Num_Reparation
		{
			get
			{
				return this._Num_Reparation;
			}
			set
			{
				if ((this._Num_Reparation != value))
				{
					this.OnNum_ReparationChanging(value);
					this.SendPropertyChanging();
					this._Num_Reparation = value;
					this.SendPropertyChanged("Num_Reparation");
					this.OnNum_ReparationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titre_Reparation", DbType="VarChar(100)")]
		public string Titre_Reparation
		{
			get
			{
				return this._Titre_Reparation;
			}
			set
			{
				if ((this._Titre_Reparation != value))
				{
					this.OnTitre_ReparationChanging(value);
					this.SendPropertyChanging();
					this._Titre_Reparation = value;
					this.SendPropertyChanged("Titre_Reparation");
					this.OnTitre_ReparationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prix", DbType="Int")]
		public System.Nullable<int> Prix
		{
			get
			{
				return this._Prix;
			}
			set
			{
				if ((this._Prix != value))
				{
					this.OnPrixChanging(value);
					this.SendPropertyChanging();
					this._Prix = value;
					this.SendPropertyChanged("Prix");
					this.OnPrixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Reparation", DbType="Date")]
		public System.Nullable<System.DateTime> Date_Reparation
		{
			get
			{
				return this._Date_Reparation;
			}
			set
			{
				if ((this._Date_Reparation != value))
				{
					this.OnDate_ReparationChanging(value);
					this.SendPropertyChanging();
					this._Date_Reparation = value;
					this.SendPropertyChanged("Date_Reparation");
					this.OnDate_ReparationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone_Client", DbType="VarChar(10)")]
		public string Telephone_Client
		{
			get
			{
				return this._Telephone_Client;
			}
			set
			{
				if ((this._Telephone_Client != value))
				{
					this.OnTelephone_ClientChanging(value);
					this.SendPropertyChanging();
					this._Telephone_Client = value;
					this.SendPropertyChanged("Telephone_Client");
					this.OnTelephone_ClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commenter", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Commenter
		{
			get
			{
				return this._Commenter;
			}
			set
			{
				if ((this._Commenter != value))
				{
					this.OnCommenterChanging(value);
					this.SendPropertyChanging();
					this._Commenter = value;
					this.SendPropertyChanged("Commenter");
					this.OnCommenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment", DbType="Int")]
		public System.Nullable<int> payment
		{
			get
			{
				return this._payment;
			}
			set
			{
				if ((this._payment != value))
				{
					this.OnpaymentChanging(value);
					this.SendPropertyChanging();
					this._payment = value;
					this.SendPropertyChanged("payment");
					this.OnpaymentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
